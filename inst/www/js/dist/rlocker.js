/*! License information can be found in rLocker.js.LICENSES.txt */
(()=>{"use strict";var t={generate:function(){for(var t=[],e=0;e<256;e++)t[e]=(e<16?"0":"")+e.toString(16);var n=4294967295*Math.random()|0,i=4294967295*Math.random()|0,s=4294967295*Math.random()|0,r=4294967295*Math.random()|0;return t[255&n]+t[n>>8&255]+t[n>>16&255]+t[n>>24&255]+"-"+t[255&i]+t[i>>8&255]+"-"+t[i>>16&15|64]+t[i>>24&255]+"-"+t[63&s|128]+t[s>>8&255]+"-"+t[s>>16&255]+t[s>>24&255]+t[255&r]+t[r>>8&255]+t[r>>16&255]+t[r>>24&255]}};if("undefined"==typeof ADL)throw"Error: ADL Wrapper not defined";if(void 0===t)throw"Error: UUID Generator not defined";class Locker{constructor(t){this.debug=!0,this.config=t||{base_url:"http://localhost:8000/xapi/",auth:"Basic "+toBase64("abcd:1234")},this.config.endpoint=(this.config.base_url+"/data/xAPI/").replace(/([^:]\/)\/+/g,"$1"),this.session={id:null,launched:null},this.agent=null,this.activity=null,this.init()}init(){ADL.XAPIWrapper.changeConfig(this.config),this.setSession(),this.setCurrentAgent("mailto:default@example.org"),this.setCurrentActivity(window.location.href,document.title),this.experienced_xAPI()}setSession(){let e="0000-0000-0000-0000";try{e=ADL.XAPIWrapper.lrs.agent.name}catch(n){n instanceof ReferenceError&&(e=t.generate())}if("undefined"!=typeof Storage){e!=sessionStorage.getItem("sid")?(sessionStorage.setItem("sid",e),this.session.launched=!0):this.session.launched=!1}else this.session.launched=!0;this.session.id=e}getSession(){return this.session}dateToLocalISO(t){const e=t.getTimezoneOffset(),n=Math.abs(e);return new Date(t.getTime()-60*e*1e3).toISOString().substr(0,23)+(e>0?"-":"+")+(n/60).toFixed(0).padStart(2,"0")+":"+(n%60).toString().padStart(2,"0")}store(t){let e=this.debug;ADL.XAPIWrapper.sendStatement(t,(function(t,n){return e&&(200!=t.status?console.error(t):console.info(n)),Shiny.onInputChange("storageStatus",t.status),n}))}setCurrentAgent(t,e=this.session.id){this.agent=new ADL.XAPIStatement.Agent(ADL.XAPIWrapper.hash(t),e)}getCurrentAgent(){return this.agent}setCurrentActivity(t,e){this.activity=new ADL.XAPIStatement.Activity(t,e)}getCurrentActivity(){return this.activity}getVerb(t,e){return new ADL.XAPIStatement.Verb(t,e)}createBasicStatement(t,e="http://adlnet.gov/expapi/verbs/"+t){let n=new ADL.XAPIStatement(this.getCurrentAgent(),this.getVerb(e,t),this.getCurrentActivity());return n.timestamp=this.dateToLocalISO(new Date),n}createStatement(t){let e=new ADL.XAPIStatement(this.getCurrentAgent(),new ADL.XAPIStatement.Verb(t.verb),new ADL.XAPIStatement.Activity(t.object));return e.timestamp=this.dateToLocalISO(new Date),e.result=t.result,e}experienced_xAPI(){let t=this.session.launched?"launched":"experienced";this.store(this.createBasicStatement(t)),this.session.launched=!1}terminated_xAPI(){this.store(this.createBasicStatement("terminated"))}completed_xAPI(){this.store(this.createBasicStatement("completed"))}answered_xAPI(t,e,n,i){let s=e.attempt?e.attempt:1,r=this.activity.id+"#"+t,a=this.activity.definition.name["en-US"]+" :: "+t,o=this.getCurrentAgent(),c=this.getVerb("http://adlnet.gov/expapi/verbs/answered","answered"),h=new ADL.XAPIStatement.Activity(r,a),d=new ADL.XAPIStatement(o,c,h);return d.object.definition.type="http://adlnet.gov/expapi/activities/interaction",d.object.definition.interactionType=e.interactionType,d.object.definition.correctResponsesPattern=[JSON.stringify(e.validateOn),e.answers.toString()],d.result={success:i,response:String(n),extensions:{"http://adlnet.gov/expapi/verbs/attempted":s.toString()}},this.store(d),d}interacted_xAPI(t){let e=this.activity.id+"#"+t,n=this.activity.definition.name["en-US"]+" :: "+t,i=this.getCurrentAgent(),s=this.getVerb("http://adlnet.gov/expapi/verbs/interacted","interacted"),r=new ADL.XAPIStatement.Activity(e,n),a=new ADL.XAPIStatement(i,s,r);a.object.definition.type="http://adlnet.gov/expapi/activities/interaction",a.object.definition.interactionType="other",this.store(a)}}var e=e||{};Shiny.addCustomMessageHandler("rlocker-setup",(function(t){e=new Locker(t)})),Shiny.addCustomMessageHandler("rlocker-store",(function(t){let n=e.createStatement(t);e.store(n)})),Shiny.addCustomMessageHandler("create-statement",(function(t){let n=e.createBasicStatement(t.verb.display["en-US"]);e.store(n)}))})();